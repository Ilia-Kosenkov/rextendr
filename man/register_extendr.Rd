% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/register_extendr.R
\name{register_extendr}
\alias{register_extendr}
\title{Register the extendr module of a package with R}
\usage{
register_extendr(
  path = ".",
  quiet = FALSE,
  force_wrappers = FALSE,
  compile = NA
)
}
\arguments{
\item{path}{File path to the package for which to generate wrapper code.}

\item{quiet}{Logical indicating whether any progress messages should be
generated or not.}

\item{force_wrappers}{Logical indicating whether to install a minimal wrapper
file in the cases when generating wrappers by Rust code failed. This might
be needed when the wrapper file is accidentally lost or corrupted.}

\item{compile}{If \code{TRUE} always recompiles the package; if \code{NA}
recompiles if needed (as determined by \code{\link[pkgbuild:needs_compile]{pkgbuild::needs_compile()}});
if \code{FALSE}, never recompiles.}
}
\value{
Logical scalar. \code{TRUE} if new wrappers were emitted, \code{FALSE}
if wrappers did not require an update.
}
\description{
This function generates wrapper code corresponding to the extendr module
for an R package. This is useful in package development, where we generally
want appropriate R code wrapping the Rust functions implemented via extendr.
}
\details{
To run \code{register_extendr()}, the R package containing extendr code must have
previously been compiled and installed. If this condition is met, the
wrapper code will be retrieved from the compiled Rust code and saved into
\code{R/extendr-wrappers.R}. Afterwards, you will have to re-document and then
re-install the package for the wrapper functions to take effect.
}
